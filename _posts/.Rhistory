user_data = subset(user_data, select = -c(cluster))
# PCA:
user.pc = prcomp(~., data=user_data,center=TRUE,scale=TRUE)
user_var <- get_pca_var(user.pc)
# Visualize relationship between components and variables with a correlation circle:
fviz_pca_var(user.pc, col.var = "black")
# Get PCA component scores:
user_out <- as.data.frame(user.pc$x)
#Add back cluster label as column
user_out$clusters = clust_users
#Plot component scores coloured by clusters:
ggplot(user_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_color_brewer(palette="Set1",name="Clusters") +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
# Load Data that has been clustered:
user_data = read.csv('User_Test.csv')
# Remove cluster labels to do PCA
clust_users = user_data$cluster
user_data = subset(user_data, select = -c(cluster))
# PCA:
user.pc = prcomp(~., data=user_data,center=TRUE,scale=TRUE)
user_var <- get_pca_var(user.pc)
# Get PCA component scores:
user_out <- as.data.frame(user.pc$x)
#Add back cluster label as column
user_out$clusters = clust_users
#Plot component scores coloured by clusters:
ggplot(user_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_color_brewer(palette="Set1",name="Clusters") +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
# Load Data that has been clustered:
user_data = read.csv('User_Test.csv')
# Remove cluster labels to do PCA
clust_users = user_data$cluster
user_data = subset(user_data, select = -c(cluster))
# PCA:
user.pc = prcomp(~., data=user_data,center=TRUE,scale=TRUE)
# PCA:
user.pc = prcomp(~., data=user_data,center=TRUE,scale=TRUE)
user.pc$rotation
# Visualize relationship between components and variables with a correlation circle:
fviz_pca_var(user.pc, col.var = "black")
user_var <- get_pca_var(user.pc)
# Get PCA component scores:
user_out <- as.data.frame(user.pc$x)
#Add back cluster label as column
user_out$clusters = clust_users
#Plot component scores coloured by clusters:
ggplot(user_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_color_brewer(palette="Set1",name="Clusters") +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
# Load Data that has been clustered:
user_data = read.csv('User_Test.csv')
# Remove cluster labels to do PCA
clust_users = user_data$cluster
user_data = subset(user_data, select = -c(cluster))
# PCA:
user.pc = prcomp(~., data=user_data,center=TRUE,scale=TRUE)
# Visualize relationship between components and variables with a correlation circle:
fviz_pca_var(user.pc, col.var = "black")
user_var <- get_pca_var(user.pc)
# Get PCA component scores:
user_out <- as.data.frame(user.pc$x)
#Add back cluster label as column
user_out$clusters = clust_users
#Plot component scores coloured by clusters:
ggplot(user_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_color_brewer(palette="Set1",name="Clusters") +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
# Load Data that has been clustered:
user_data = read.csv('User_Test.csv')
head(user_data)
# Remove cluster labels to do PCA
clust_users = user_data$cluster
user_data = subset(user_data, select = -c(cluster))
# PCA:
user.pc = prcomp(~., data=user_data,center=TRUE,scale=TRUE)
# Visualize relationship between components and variables with a correlation circle:
fviz_pca_var(user.pc, col.var = "black")
user_var <- get_pca_var(user.pc)
corrplot(user_var$cos2, is.corr=FALSE)
# Get PCA component scores:
user_out <- as.data.frame(user.pc$x)
#Add back cluster label as column
user_out$clusters = clust_users
#Plot component scores coloured by clusters:
ggplot(user_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_color_brewer(palette="Set1",name="Clusters") +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
# Load Data that has been clustered:
user_data = read.csv('User_Clusters.csv')
user_data = subset(user_data, select = -c(cluster))
# Remove cluster labels to do PCA
clust_users = user_data$cluster
# Load Data that has been clustered:
user_data = read.csv('User_Clusters.csv')
# Remove cluster labels to do PCA
clust_users = user_data$cluster
user_data = subset(user_data, select = -c(cluster))
# PCA:
user.pc = prcomp(~., data=user_data,center=TRUE,scale=TRUE)
# Visualize relationship between components and variables with a correlation circle:
fviz_pca_var(user.pc, col.var = "black")
user_var <- get_pca_var(user.pc)
corrplot(user_var$cos2, is.corr=FALSE)
# Get PCA component scores:
user_out <- as.data.frame(user.pc$x)
#Add back cluster label as column
user_out$clusters = clust_users
#Plot component scores coloured by clusters:
ggplot(user_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_color_brewer(palette="Set1",name="Clusters") +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
user_test = read.csv('User_Test.csv')
# PCA:
test_clust = user_test$cluster
user_test = subset(user_test, select = -c(cluster))
test.pc = prcomp(~., data=user_test,center=TRUE,scale=TRUE)
test_var <- get_pca_var(test.pc)
# Get PCA component scores:
test_out <- as.data.frame(test.pc$x)
#Add back cluster label as column
test_out$clusters = test_clust
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_color_brewer(palette="Set1",name="Clusters") +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_fill_manual(values = c("red", "grey", "seagreen3","black")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_fill_manual(values = c("blue", "black", "green","red")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_color_manual(values = c("blue", "black", "green","red")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_color_manual(values = c("black", "orangered", "dodgerblue","seagreen")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_color_manual(values = c("black", "red3", "steelblue","springgreen")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_color_manual(values = c("black", "orangered", "dodgerblue","seagreen")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_color_manual(values = c("purple", "orangered", "dodgerblue","seagreen")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_color_manual(values = c("orangered", "purple", "dodgerblue","seagreen")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_color_manual(values = c("orangered", "seagreen", "purple","steelblue")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_color_manual(values = c("black", "seagreen", "purple","steelblue")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_color_manual(values = c("grey23", "seagreen", "purple","steelblue")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_color_manual(values = c("black", "green", "red","blue")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Plot component scores coloured by clusters:
ggplot(user_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_color_manual(values = c("black", "green", "red","blue")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Add back cluster label as column
user_out$clusters = as.factor(clust_users)
#Plot component scores coloured by clusters:
ggplot(user_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_color_manual(values = c("black", "green", "red","blue")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Plot component scores coloured by clusters:
ggplot(user_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_manual(values = c("black", "green", "red","blue")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_manual(values = c("black", "green", "red","blue")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Add back cluster label as column
test_out$clusters = as.factor(test_clust)
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_manual(values = c("black", "green", "red","blue")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Add back cluster label as column
user_out$clusters = as.factor(clust_users)
#Plot component scores coloured by clusters:
ggplot(user_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_manual(values = c("black", "green", "red","blue")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Add back cluster label as column
user_out$clusters = factor(clust_users)
#Add back cluster label as column
test_out$clusters = factor(test_clust)
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_manual(values = c("black", "green", "red","blue")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Add back cluster label as column
user_out$clusters = factor(clust_users)
#Plot component scores coloured by clusters:
ggplot(user_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_manual(values = c("black", "green", "red","blue")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Add back cluster label as column
test_out$clusters = factor(test_clust, levels = c(0,1,2,3))
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_manual(values = c("black", "green", "red","blue")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Add back cluster label as column
user_out$clusters = factor(test_clust, levels = c(0,1,2,3))
#Add back cluster label as column
user_out$clusters = factor(clust_users, levels = c(0,1,2,3))
#Plot component scores coloured by clusters:
ggplot(user_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_manual(values = c("black", "green", "red","blue")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
# Load Data that has been clustered:
user_data = read.csv('User_Clusters.csv')
rm(list=ls())
# Load Data that has been clustered:
user_data = read.csv('User_Clusters.csv')
# Remove cluster labels to do PCA
clust_users = user_data$cluster
user_data = subset(user_data, select = -c(cluster))
# PCA:
user.pc = prcomp(~., data=user_data,center=TRUE,scale=TRUE)
user_var <- get_pca_var(user.pc)
user_var <- get_pca_var(user.pc)
# Get PCA component scores:
user_out <- as.data.frame(user.pc$x)
#Add back cluster label as column
user_out$clusters = factor(clust_users)
#Plot component scores coloured by clusters:
ggplot(user_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_manual(values = c("black", "green", "red","blue")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
# Load Test Data:
user_test = read.csv('User_Test.csv')
test_clust = user_test$cluster
user_test = subset(user_test, select = -c(cluster))
test.pc = prcomp(~., data=user_test,center=TRUE,scale=TRUE)
test_var <- get_pca_var(test.pc)
# Get PCA component scores:
test_out <- as.data.frame(test.pc$x)
#Add back cluster label as column
test_out$clusters = factor(test_clust)
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_manual(values = c("black", "green", "red","blue")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Plot component scores coloured by clusters:
ggplot(user_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_manual(values = c("red", "green", "blue","black")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
rm(list=ls())
# Load Data that has been clustered:
user_data = read.csv('User_Clusters.csv')
# Remove cluster labels to do PCA
clust_users = user_data$cluster
user_data = subset(user_data, select = -c(cluster))
user_var <- get_pca_var(user.pc)
# PCA:
user.pc = prcomp(~., data=user_data,center=TRUE,scale=TRUE)
user_var <- get_pca_var(user.pc)
# Get PCA component scores:
user_out <- as.data.frame(user.pc$x)
#Add back cluster label as column
user_out$clusters = factor(clust_users)
#Plot component scores coloured by clusters:
ggplot(user_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_manual(values = c("red", "green", "blue","black")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Plot component scores coloured by clusters:
ggplot(user_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_colour_brewer("Dark2") +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Plot component scores coloured by clusters:
ggplot(user_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_brewer(palette = "Dark2") +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
user_test = read.csv('User_Test.csv')
# PCA:
test_clust = user_test$cluster
user_test = subset(user_test, select = -c(cluster))
test.pc = prcomp(~., data=user_test,center=TRUE,scale=TRUE)
test_var <- get_pca_var(test.pc)
# Get PCA component scores:
test_out <- as.data.frame(test.pc$x)
#Add back cluster label as column
test_out$clusters = factor(test_clust)
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_brewer(palette = "Dark2") +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Plot component scores coloured by clusters:
ggplot(user_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_brewer(palette = "Dark2") +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
fviz_pca_var(user.pc, col.var = "black")
# Visualize relationship between components and variables with a correlation circle:
tiff("C:/Users/laagi_000/Documents/Laagi/GradSkol/Thesis/writing/PCA_test.tiff", units="in", width=5, height=5, res=300)
fviz_pca_var(user.pc, col.var = "black")
dev.off()
tiff("PCA_test.tiff", units="in", width=5, height=5, res=300)
fviz_pca_var(user.pc, col.var = "black")
dev.off()
tiff("corrplot_train.tiff", units="in", width=5, height=5, res=300)
corrplot(user_var$cos2, is.corr=FALSE)
dev.off()
# Visualize relationship between components and variables with a correlation circle:
tiff("corrplot_train.tiff", units="in", width=5, height=4, res=300)
corrplot(user_var$cos2, is.corr=FALSE)
dev.off()
tiff("user_data_PCA.tiff", units="in", width=6, height=4, res=300)
ggplot(user_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_brewer(palette = "Dark2") +
labs(x="PC1 (Long Trips)", y="PC2 (Frequent Searches)", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
dev.off()
tiff("test_data_PCA.tiff", units="in", width=6, height=4, res=300)
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_brewer(palette = "Dark2") +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
dev.off()
tiff("test_data_PCA.tiff", units="in", width=6, height=4, res=300)
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_brewer(palette = "Dark2") +
labs(x="PC1", y="PC2", title = "Clustering on Test Data") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
dev.off()
ggplot(user_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_brewer(palette = "Dark2") +
labs(x="PC1 (Frequent Searches)", y="PC2 (Long Trip)", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
dev.off
ggplot(user_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_brewer(palette = "Dark2") +
labs(x="PC1 (Frequent Searches)", y="PC2 (Long Trips)", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
dev.off()
#Plot component scores coloured by clusters:
tiff("this_one.tiff", units="in", width=6, height=4, res=300)
ggplot(user_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_brewer(palette = "Dark2") +
labs(x="PC1 (Frequent Searches)", y="PC2 (Long Trips)", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
dev.off()
getwd()
cd('C:/Users/Laagi/Documents/GitHub/test')
setwd('C:/Users/Laagi/Documents/GitHub/test')
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
kable(head(penguins,))
library(palmerpenguins)
library(ggplot2)
library(scatterplot3d)
library(knitr)
kable(head(penguins,))
library(palmerpenguins)
library(ggplot2)
library(scatterplot3d)
library(knitr)
kable(head(penguins,5))
blogdown::build_site()
kable(penguins)
library(knitr)
blogdown::build_site()
setwd('C:/Users/Laagi/Documents/GitHub/lyoganathan.github.io')
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
library(palmerpenguins)
library(ggplot2)
library(scatterplot3d)
library(knitr)
kable(head(penguins,10))
# Remove NAs
penguins_df = na.omit(penguins)
# Histogram, position='identity' makes sure its not stacked
#ggplot(penguins_df, aes(x=body_mass_g, fill=species, color=species)) + geom_histogram(alpha=0.4, position='identity')
# Density plot:
ggplot(penguins_df, aes(x=body_mass_g, fill=species)) + geom_density(alpha=0.8) + theme_clean()
# Density plot:
ggplot(penguins_df, aes(x=body_mass_g, fill=species)) + geom_density(alpha=0.8) + theme_minimal()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
library(palmerpenguins)
library(ggplot2)
library(scatterplot3d)
library(knitr)
kable(head(penguins,10))
# Remove NAs
penguins_df = na.omit(penguins)
# Histogram, position='identity' makes sure its not stacked
#ggplot(penguins_df, aes(x=body_mass_g, fill=species, color=species)) + geom_histogram(alpha=0.4, position='identity')
# Density plot:
library(palmerpenguins)
library(ggplot2)
library(scatterplot3d)
library(knitr)
kable(head(penguins,10))
# Remove NAs
penguins_df = na.omit(penguins)
# Mean body mass for each species
aggregate(body_mass_g ~ species, penguins_df, mean)
# Number of data points for each species
aggregate(body_mass_g ~ species, penguins_df, length)
