user_out$clusters = clust_users
#Plot component scores coloured by clusters:
ggplot(user_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_color_brewer(palette="Set1",name="Clusters") +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
# Load Data that has been clustered:
user_data = read.csv('User_Test.csv')
# Remove cluster labels to do PCA
clust_users = user_data$cluster
user_data = subset(user_data, select = -c(cluster))
# PCA:
user.pc = prcomp(~., data=user_data,center=TRUE,scale=TRUE)
# PCA:
user.pc = prcomp(~., data=user_data,center=TRUE,scale=TRUE)
user.pc$rotation
# Visualize relationship between components and variables with a correlation circle:
fviz_pca_var(user.pc, col.var = "black")
user_var <- get_pca_var(user.pc)
# Get PCA component scores:
user_out <- as.data.frame(user.pc$x)
#Add back cluster label as column
user_out$clusters = clust_users
#Plot component scores coloured by clusters:
ggplot(user_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_color_brewer(palette="Set1",name="Clusters") +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
# Load Data that has been clustered:
user_data = read.csv('User_Test.csv')
# Remove cluster labels to do PCA
clust_users = user_data$cluster
user_data = subset(user_data, select = -c(cluster))
# PCA:
user.pc = prcomp(~., data=user_data,center=TRUE,scale=TRUE)
# Visualize relationship between components and variables with a correlation circle:
fviz_pca_var(user.pc, col.var = "black")
user_var <- get_pca_var(user.pc)
# Get PCA component scores:
user_out <- as.data.frame(user.pc$x)
#Add back cluster label as column
user_out$clusters = clust_users
#Plot component scores coloured by clusters:
ggplot(user_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_color_brewer(palette="Set1",name="Clusters") +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
# Load Data that has been clustered:
user_data = read.csv('User_Test.csv')
head(user_data)
# Remove cluster labels to do PCA
clust_users = user_data$cluster
user_data = subset(user_data, select = -c(cluster))
# PCA:
user.pc = prcomp(~., data=user_data,center=TRUE,scale=TRUE)
# Visualize relationship between components and variables with a correlation circle:
fviz_pca_var(user.pc, col.var = "black")
user_var <- get_pca_var(user.pc)
corrplot(user_var$cos2, is.corr=FALSE)
# Get PCA component scores:
user_out <- as.data.frame(user.pc$x)
#Add back cluster label as column
user_out$clusters = clust_users
#Plot component scores coloured by clusters:
ggplot(user_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_color_brewer(palette="Set1",name="Clusters") +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
# Load Data that has been clustered:
user_data = read.csv('User_Clusters.csv')
user_data = subset(user_data, select = -c(cluster))
# Remove cluster labels to do PCA
clust_users = user_data$cluster
# Load Data that has been clustered:
user_data = read.csv('User_Clusters.csv')
# Remove cluster labels to do PCA
clust_users = user_data$cluster
user_data = subset(user_data, select = -c(cluster))
# PCA:
user.pc = prcomp(~., data=user_data,center=TRUE,scale=TRUE)
# Visualize relationship between components and variables with a correlation circle:
fviz_pca_var(user.pc, col.var = "black")
user_var <- get_pca_var(user.pc)
corrplot(user_var$cos2, is.corr=FALSE)
# Get PCA component scores:
user_out <- as.data.frame(user.pc$x)
#Add back cluster label as column
user_out$clusters = clust_users
#Plot component scores coloured by clusters:
ggplot(user_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_color_brewer(palette="Set1",name="Clusters") +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
user_test = read.csv('User_Test.csv')
# PCA:
test_clust = user_test$cluster
user_test = subset(user_test, select = -c(cluster))
test.pc = prcomp(~., data=user_test,center=TRUE,scale=TRUE)
test_var <- get_pca_var(test.pc)
# Get PCA component scores:
test_out <- as.data.frame(test.pc$x)
#Add back cluster label as column
test_out$clusters = test_clust
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_color_brewer(palette="Set1",name="Clusters") +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_fill_manual(values = c("red", "grey", "seagreen3","black")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_fill_manual(values = c("blue", "black", "green","red")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_color_manual(values = c("blue", "black", "green","red")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_color_manual(values = c("black", "orangered", "dodgerblue","seagreen")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_color_manual(values = c("black", "red3", "steelblue","springgreen")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_color_manual(values = c("black", "orangered", "dodgerblue","seagreen")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_color_manual(values = c("purple", "orangered", "dodgerblue","seagreen")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_color_manual(values = c("orangered", "purple", "dodgerblue","seagreen")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_color_manual(values = c("orangered", "seagreen", "purple","steelblue")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_color_manual(values = c("black", "seagreen", "purple","steelblue")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_color_manual(values = c("grey23", "seagreen", "purple","steelblue")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_color_manual(values = c("black", "green", "red","blue")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Plot component scores coloured by clusters:
ggplot(user_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_color_manual(values = c("black", "green", "red","blue")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Add back cluster label as column
user_out$clusters = as.factor(clust_users)
#Plot component scores coloured by clusters:
ggplot(user_out,aes(x=PC1,y=PC2, color=as.factor(clusters) )) + geom_point() +
scale_color_manual(values = c("black", "green", "red","blue")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Plot component scores coloured by clusters:
ggplot(user_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_manual(values = c("black", "green", "red","blue")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_manual(values = c("black", "green", "red","blue")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Add back cluster label as column
test_out$clusters = as.factor(test_clust)
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_manual(values = c("black", "green", "red","blue")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Add back cluster label as column
user_out$clusters = as.factor(clust_users)
#Plot component scores coloured by clusters:
ggplot(user_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_manual(values = c("black", "green", "red","blue")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Add back cluster label as column
user_out$clusters = factor(clust_users)
#Add back cluster label as column
test_out$clusters = factor(test_clust)
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_manual(values = c("black", "green", "red","blue")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Add back cluster label as column
user_out$clusters = factor(clust_users)
#Plot component scores coloured by clusters:
ggplot(user_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_manual(values = c("black", "green", "red","blue")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Add back cluster label as column
test_out$clusters = factor(test_clust, levels = c(0,1,2,3))
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_manual(values = c("black", "green", "red","blue")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Add back cluster label as column
user_out$clusters = factor(test_clust, levels = c(0,1,2,3))
#Add back cluster label as column
user_out$clusters = factor(clust_users, levels = c(0,1,2,3))
#Plot component scores coloured by clusters:
ggplot(user_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_manual(values = c("black", "green", "red","blue")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
# Load Data that has been clustered:
user_data = read.csv('User_Clusters.csv')
rm(list=ls())
# Load Data that has been clustered:
user_data = read.csv('User_Clusters.csv')
# Remove cluster labels to do PCA
clust_users = user_data$cluster
user_data = subset(user_data, select = -c(cluster))
# PCA:
user.pc = prcomp(~., data=user_data,center=TRUE,scale=TRUE)
user_var <- get_pca_var(user.pc)
user_var <- get_pca_var(user.pc)
# Get PCA component scores:
user_out <- as.data.frame(user.pc$x)
#Add back cluster label as column
user_out$clusters = factor(clust_users)
#Plot component scores coloured by clusters:
ggplot(user_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_manual(values = c("black", "green", "red","blue")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
# Load Test Data:
user_test = read.csv('User_Test.csv')
test_clust = user_test$cluster
user_test = subset(user_test, select = -c(cluster))
test.pc = prcomp(~., data=user_test,center=TRUE,scale=TRUE)
test_var <- get_pca_var(test.pc)
# Get PCA component scores:
test_out <- as.data.frame(test.pc$x)
#Add back cluster label as column
test_out$clusters = factor(test_clust)
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_manual(values = c("black", "green", "red","blue")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Plot component scores coloured by clusters:
ggplot(user_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_manual(values = c("red", "green", "blue","black")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
rm(list=ls())
# Load Data that has been clustered:
user_data = read.csv('User_Clusters.csv')
# Remove cluster labels to do PCA
clust_users = user_data$cluster
user_data = subset(user_data, select = -c(cluster))
user_var <- get_pca_var(user.pc)
# PCA:
user.pc = prcomp(~., data=user_data,center=TRUE,scale=TRUE)
user_var <- get_pca_var(user.pc)
# Get PCA component scores:
user_out <- as.data.frame(user.pc$x)
#Add back cluster label as column
user_out$clusters = factor(clust_users)
#Plot component scores coloured by clusters:
ggplot(user_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_manual(values = c("red", "green", "blue","black")) +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Plot component scores coloured by clusters:
ggplot(user_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_colour_brewer("Dark2") +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Plot component scores coloured by clusters:
ggplot(user_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_brewer(palette = "Dark2") +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
user_test = read.csv('User_Test.csv')
# PCA:
test_clust = user_test$cluster
user_test = subset(user_test, select = -c(cluster))
test.pc = prcomp(~., data=user_test,center=TRUE,scale=TRUE)
test_var <- get_pca_var(test.pc)
# Get PCA component scores:
test_out <- as.data.frame(test.pc$x)
#Add back cluster label as column
test_out$clusters = factor(test_clust)
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_brewer(palette = "Dark2") +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
#Plot component scores coloured by clusters:
ggplot(user_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_brewer(palette = "Dark2") +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
fviz_pca_var(user.pc, col.var = "black")
# Visualize relationship between components and variables with a correlation circle:
tiff("C:/Users/laagi_000/Documents/Laagi/GradSkol/Thesis/writing/PCA_test.tiff", units="in", width=5, height=5, res=300)
fviz_pca_var(user.pc, col.var = "black")
dev.off()
tiff("PCA_test.tiff", units="in", width=5, height=5, res=300)
fviz_pca_var(user.pc, col.var = "black")
dev.off()
tiff("corrplot_train.tiff", units="in", width=5, height=5, res=300)
corrplot(user_var$cos2, is.corr=FALSE)
dev.off()
# Visualize relationship between components and variables with a correlation circle:
tiff("corrplot_train.tiff", units="in", width=5, height=4, res=300)
corrplot(user_var$cos2, is.corr=FALSE)
dev.off()
tiff("user_data_PCA.tiff", units="in", width=6, height=4, res=300)
ggplot(user_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_brewer(palette = "Dark2") +
labs(x="PC1 (Long Trips)", y="PC2 (Frequent Searches)", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
dev.off()
tiff("test_data_PCA.tiff", units="in", width=6, height=4, res=300)
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_brewer(palette = "Dark2") +
labs(x="PC1", y="PC2", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
dev.off()
tiff("test_data_PCA.tiff", units="in", width=6, height=4, res=300)
#Plot component scores coloured by clusters:
ggplot(test_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_brewer(palette = "Dark2") +
labs(x="PC1", y="PC2", title = "Clustering on Test Data") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
dev.off()
ggplot(user_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_brewer(palette = "Dark2") +
labs(x="PC1 (Frequent Searches)", y="PC2 (Long Trip)", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
dev.off
ggplot(user_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_brewer(palette = "Dark2") +
labs(x="PC1 (Frequent Searches)", y="PC2 (Long Trips)", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
dev.off()
#Plot component scores coloured by clusters:
tiff("this_one.tiff", units="in", width=6, height=4, res=300)
ggplot(user_out,aes(x=PC1,y=PC2, color=clusters)) + geom_point() +
scale_color_brewer(palette = "Dark2") +
labs(x="PC1 (Frequent Searches)", y="PC2 (Long Trips)", title = "Clusters of Users Visualized on PCA Axis") +
theme(text = element_text(size=15), plot.title = element_text(face = "bold"),
strip.text.x = element_text(face = "bold"))
dev.off()
getwd()
setwd('C:/Users/Laagi/Documents/GitHub/lyoganathan.github.io')
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
library(palmerpenguins)
library(ggplot2)
library(scatterplot3d)
library(knitr)
kable(head(penguins,10))
# Remove NAs
penguins_df = na.omit(penguins)
# Here we keep rows that contain Adelie or Chinstrap and only keep species and body_mass_g column
test_df = penguins_df[penguins_df$species %in% c('Adelie','Chinstrap'), c("species","body_mass_g")]
# Create factors again to remove unused factor level:
test_df$species = factor(test_df$species)
# Difference between means:
diff(by(test_df$body_mass_g, test_df$species, mean))
sample(penguins,10)
sample(penguins,10)
penguins[sample(nrow(penguins),10),]
mean_diff = diff(by(test_df$body_mass_g, test_df$species, mean))
# Variacne estimator of coefficients from linear model that meets assumptions:
# In this case Xs are just 0 or 1, Y is the body mass for respective species
var1 = var(test_df$body_mass_g[test_df$species == "Chinstrap"])
var2 = var(test_df$body_mass_g[test_df$species == "Adelie"])
n1 = length(test_df$body_mass_g[test_df$species == "Chinstrap"])
n2 = length(test_df$body_mass_g[test_df$species == "Adelie"])
# Pooled variance:
var_pool = ( (n1-1)*var1 + (n2-1) * var2) / (n1+n2-2)
# Pooled standard error:
se_pool = sqrt( var_pool * (1/n1 + 1/n2) )
mean_diff = diff(by(test_df$body_mass_g, test_df$species, mean))
se_pool
mean_diff
sprintf("Pooled standard error = %f", se_pool)
# If you set var.equal = T it will give the same t-value & p-value as the regression
t.test(test_df$body_mass_g ~ test_df$species, var.equal = T)
# p-value from t-distribution:
pt(t_val,(n1+n2-2))
# t-value:
t_val = mean_diff/se_pool
# p-value from t-distribution:
pt(t_val,(n1+n2-2))
# p-value from t-distribution:
pt(t_val,(n1+n2-2),lower.tail = TRUE)
# p-value from t-distribution:
pt(t_val,(n1+n2-2),lower.tail = TRUE)
# p-value from t-distribution:
pt(t_val,(n1+n2-2),lower.tail = FALSE)
# p-value from t-distribution:
pt(t_val,212)
# p-value from t-distribution:
pt(-t_val,212)
# p-value from t-distribution:
pt(0.42,212)
sprintf("Difference between means = %f", mean_diff)
# p-value from t-distribution:
qt(0.42,212)
# p-value from t-distribution:
qt(0.42,212,lower.tail = FALSE)
# p-value from t-distribution:
pt(0.42,214)
# p-value from t-distribution:
pt(0.42,215)
# p-value from t-distribution:
pt(0.42,213)
# p-value from t-distribution:
dt(0.42,213)
# p-value from t-distribution:
pt(0.42,213)
# p-value from t-distribution:
pt(t_val,213)
# p-value from t-distribution:
pt(-0.42011,213)
# p-value from t-distribution:
pt(0.42011,213)
sprintf("T-value = %f", t_val)
# p-value from t-distribution:
2*pt(t_val,213)
# p-value from t-distribution:
2*pt(-t_val,213)
# p-value from t-distribution (Negative our t-value to match output from t.test):
p_val = 2*pt(-t_val,213)
sprintf("Pooled standard error = %f", se_pool)
sprintf("Difference between means = %f", mean_diff)
sprintf("T-value = %f", t_val)
sprintf("p-value = %f", p_val)
kable(penguins[sample(nrow(penguins),10),])
blogdown::build_site()
